{"version":3,"sources":["actions/procedureActions.js","components/Procedure.js","components/CategorySection.js","components/ProcedureList.js","components/PricingCalc.js","App.js","serviceWorker.js","reducers/procedureReducer.js","reducers/index.js","store.js","index.js"],"names":["deselectProcedure","procedure","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","wrap","_context3","prev","next","type","payload","stop","this","_x3","apply","arguments","Procedure","_this$props","props","selectProcedure","applyDiscount","isSelected","react_default","createElement","Fragment","className","concat","ProcedureId","onClick","Label","MinimumPrice","MaximumPrice","Component","connect","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","_x5","CategorySection","category","procedures","map","CategoryId","components_Procedure","key","state","procedureReducer","ProcedureList","categories","components_CategorySection","length","PricingCalc","selectedProcedures","selectedMin","selectedMax","clearProcedures","discountedSelectedMin","discountedSelectedMax","discount","build_default","value","style","transition","transitionProperty","stepPrecision","duration","_ref4","_callee4","_context4","_x4","App","getProcedures","components_PricingCalc","components_ProcedureList","_ref","_callee","res","_context","axios","get","sent","data","_x","Boolean","window","location","hostname","match","initialState","undefined","action","objectSpread","MasterPage","Procedures","Categories","toConsumableArray","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3917cdb.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const GET_PROCEDURES = \"GET_PROCEDURES\";\nexport const SELECT_PROCEDURE = \"SELECT_PROCEDURE\";\nexport const DESELECT_PROCEDURE = \"DESELECT_PROCEDURE\";\nexport const CLEAR_PROCEDURES = \"CLEAR_PROCEDURES\";\nexport const APPLY_DISCOUNT = \"APPLY_DISCOUNT\";\n\nexport const getProcedures = () => async dispatch => {\n  const res = await axios.get(\n    // for any other customer, change filing name here and the same result should follow\n    \"https://moralesrolando.doctorlogicsitesstage.com/?json=true\"\n  );\n\n  dispatch({\n    type: GET_PROCEDURES,\n    payload: res.data\n  });\n};\n\nexport const selectProcedure = procedure => async dispatch => {\n  await dispatch({\n    type: SELECT_PROCEDURE,\n    payload: procedure\n  });\n};\n\nexport const deselectProcedure = procedure => async dispatch => {\n  //console.log(procedure.Label);\n  await dispatch({\n    type: DESELECT_PROCEDURE,\n    payload: procedure\n  });\n};\n\nexport const clearProcedures = () => async dispatch => {\n  await dispatch({\n    type: CLEAR_PROCEDURES\n  });\n};\n\nexport const applyDiscount = procedure => async dispatch => {\n  await dispatch({\n    type: APPLY_DISCOUNT,\n    payload: procedure\n  });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  selectProcedure,\n  deselectProcedure,\n  applyDiscount\n} from \"../actions/procedureActions\";\n\nclass Procedure extends Component {\n  render() {\n    const { procedure, deselectProcedure, selectProcedure, applyDiscount } = this.props;\n    if (procedure.isSelected) {\n      return (\n        <React.Fragment>\n          <div\n            className={`procedure-list__procedure procedure procedure--${\n              procedure.ProcedureId\n            } procedure--selected`}\n            onClick={() => {\n              deselectProcedure(procedure);\n              applyDiscount(procedure);\n            }}\n          >\n            <h3 className=\"procedure__label\">{procedure.Label}</h3>\n            <p className=\"procedure__price\">\n              <span className=\"procedure__min-price\">\n                ${procedure.MinimumPrice}\n              </span>\n              {\" - \"}\n              <span className=\"procedure__max-price\">\n                ${procedure.MaximumPrice}\n              </span>\n            </p>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div\n            className={`procedure-list__procedure procedure procedure--${\n              procedure.ProcedureId\n            }`}\n            onClick={() => {\n              selectProcedure(procedure);\n              applyDiscount(procedure);\n            }}\n          >\n            <h3 className=\"procedure__label\">{procedure.Label}</h3>\n            <p className=\"procedure__price\">\n              <span className=\"procedure__min-price\">\n                ${procedure.MinimumPrice}\n              </span>\n              {\" - \"}\n              <span className=\"procedure__max-price\">\n                ${procedure.MaximumPrice}\n              </span>\n            </p>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nProcedure.propTypes = {\n  procedure: PropTypes.object.isRequired,\n  selectProcedure: PropTypes.func.isRequired,\n  deselectProcedure: PropTypes.func.isRequired,\n  applyDiscount: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { selectProcedure, deselectProcedure, applyDiscount }\n)(Procedure);\n","import React, { Component } from \"react\";\nimport Procedure from \"./Procedure\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass CategorySection extends Component {\n  render() {\n    const { category, procedures } = this.props;\n    return (\n      <div className=\"procedure-list__category\">\n        <h2 className=\"procedure-list__category-header\">\n          {category.Label}\n        </h2>\n        <div className=\"procedure-list__category-procedures\">\n          {procedures &&\n            procedures.map(procedure => {\n              return procedure.CategoryId === category.CategoryId ? (\n                <Procedure key={procedure.ProcedureId} procedure={procedure} />\n              ) : null;\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nCategorySection.propTypes = {\n  procedures: PropTypes.array.isRequired,\n  category: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  procedures: state.procedureReducer.procedures\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CategorySection);\n","import React, { Component } from \"react\";\nimport CategorySection from \"./CategorySection\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass ProcedureList extends Component {\n  \n\n  render() {\n    const { categories, procedures } = this.props;\n    return (\n      <div className=\"procedure-list\">\n        {// Create Category Sections\n        categories.map(category => {\n          return (\n            <CategorySection key={category.CategoryId} category={category} />\n          );\n        })}\n        {procedures.length === 0 && <p>Loading procedures...</p>}\n      </div>\n    );\n  }\n}\n\nProcedureList.propTypes = {\n  procedures: PropTypes.array.isRequired,\n  categories: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  procedures: state.procedureReducer.procedures,\n  categories: state.procedureReducer.categories\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProcedureList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  deselectProcedure,\n  clearProcedures\n} from \"../actions/procedureActions\";\nimport AnimatedNumber from \"react-animated-number\";\n\nclass PricingCalc extends Component {\n  render() {\n    const {\n      selectedProcedures,\n      selectedMin,\n      selectedMax,\n      clearProcedures,\n      discountedSelectedMin,\n      discountedSelectedMax,\n      discount\n    } = this.props;\n\n    if (selectedProcedures.length === 0) {\n      return (\n        <React.Fragment>\n          <div className=\"pricing-calc\">\n            <h3 className=\"pricing-calc__new-total\">\n              <span>Total: $0</span>\n            </h3>\n            <span className=\"pricing-calc__num-selected\">\n              No procedures selected\n            </span>\n          </div>\n          <h4 className=\"pricing-calc__text\">Select Desired Procedures:</h4>\n        </React.Fragment>\n      );\n    } else if (selectedProcedures.length === 1) {\n      return (\n        <React.Fragment>\n          <div className=\"pricing-calc\">\n            <h3 className=\"pricing-calc__new-total\">\n              <span>Total: $</span>\n              <AnimatedNumber\n                value={selectedMin}\n                style={{\n                  transition: \"0.8s ease-out\",\n                  transitionProperty: \"background-color, color, opacity\"\n                }}\n                stepPrecision={0}\n                duration={700}\n              />\n              <span> - $</span>\n              <AnimatedNumber\n                value={selectedMax}\n                style={{\n                  transition: \"0.8s ease-out\",\n                  transitionProperty: \"background-color, color, opacity\"\n                }}\n                stepPrecision={0}\n                duration={700}\n              />\n            </h3>\n            <span className=\"pricing-calc__num-selected\">\n              1 procedure selected\n            </span>\n            <div\n              className=\"pricing-calc__clear\"\n              onClick={() => {\n                clearProcedures();\n              }}\n            >\n              Reset\n            </div>\n          </div>\n          <h4 className=\"pricing-calc__text\">Select Desired Procedures:</h4>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"pricing-calc\">\n            <div className=\"pricing-calc__total-wrapper\">\n              <h3 className=\"pricing-calc__new-total\">\n                <span>Now: $</span>\n                <AnimatedNumber\n                  value={discountedSelectedMin}\n                  style={{\n                    transition: \"0.8s ease-out\",\n                    transitionProperty: \"background-color, color, opacity\"\n                  }}\n                  stepPrecision={0}\n                  duration={700}\n                />\n                <span> - $</span>\n                <AnimatedNumber\n                  value={discountedSelectedMax}\n                  style={{\n                    transition: \"0.8s ease-out\",\n                    transitionProperty: \"background-color, color, opacity\"\n                  }}\n                  stepPrecision={0}\n                  duration={700}\n                />\n              </h3>\n              <h3 className=\"pricing-calc__old-total\">\n                <span>Was: $</span>\n                <AnimatedNumber\n                  value={selectedMin}\n                  style={{\n                    transition: \"0.8s ease-out\",\n                    transitionProperty: \"background-color, color, opacity\"\n                  }}\n                  stepPrecision={0}\n                  duration={700}\n                />\n                <span> - $</span>\n                <AnimatedNumber\n                  value={selectedMax}\n                  style={{\n                    transition: \"0.8s ease-out\",\n                    transitionProperty: \"background-color, color, opacity\"\n                  }}\n                  stepPrecision={0}\n                  duration={700}\n                />\n              </h3>\n            </div>\n            <h3 className=\"pricing-calc__discount animateAll\">\n              <span>Save: $</span>\n              <AnimatedNumber\n                value={discount}\n                style={{\n                  transition: \"0.8s ease-out\",\n                  transitionProperty: \"background-color, color, opacity\"\n                }}\n                stepPrecision={0}\n                duration={1000}\n              />\n            </h3>\n            <span className=\"pricing-calc__num-selected\">\n              {selectedProcedures.length} procedures selected\n            </span>\n            <div\n              className=\"pricing-calc__clear\"\n              onClick={() => {\n                clearProcedures();\n              }}\n            >\n              Reset\n            </div>\n          </div>\n          <h4 className=\"pricing-calc__text\">Select Desired Procedures:</h4>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nPricingCalc.propTypes = {\n  selectedProcedures: PropTypes.array.isRequired,\n  selectedMin: PropTypes.number.isRequired,\n  selectedMax: PropTypes.number.isRequired,\n  discountedSelectedMin: PropTypes.number.isRequired,\n  discountedSelectedMax: PropTypes.number.isRequired,\n  discount: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  selectedProcedures: state.procedureReducer.selectedProcedures,\n  selectedMin: state.procedureReducer.selectedMin,\n  selectedMax: state.procedureReducer.selectedMax,\n  discountedSelectedMin: state.procedureReducer.discountedSelectedMin,\n  discountedSelectedMax: state.procedureReducer.discountedSelectedMax,\n  discount: state.procedureReducer.discount\n});\n\nexport default connect(\n  mapStateToProps,\n  { deselectProcedure, clearProcedures }\n)(PricingCalc);\n","import React, { Component } from \"react\";\nimport ProcedureList from \"./components/ProcedureList\";\nimport PricingCalc from \"./components/PricingCalc\";\nimport { connect } from \"react-redux\";\nimport { getProcedures } from \"./actions/procedureActions\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { getProcedures } = this.props;\n    getProcedures();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"headline\">Multi-Procedure Pricing Calculator</h1>\n        <div className=\"panel\">\n          <div className=\"panel-body\">\n            <p>\n              * Dr. Morales offers visitors to his site the opportunity to see\n              estimated prices at his premier facility. These estimates are not\n              quotes or guarantees. You should not rely upon those estimates as\n              a full or final price. Your actual costs may be higher or lower\n              depending on many factors, including but not limited to: your\n              surgeon's treatment choices, actual services rendered, additional\n              ancillary treatments or services, medications, and potential\n              complications. An in-person consultation is required to receive a\n              finalized quote of the procedure(s) you desire.\n            </p>\n          </div>\n        </div>\n        <PricingCalc />\n        <ProcedureList />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getProcedures }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_PROCEDURES,\n  SELECT_PROCEDURE,\n  DESELECT_PROCEDURE,\n  CLEAR_PROCEDURES,\n  APPLY_DISCOUNT\n} from \"../actions/procedureActions\";\n\nconst initialState = {\n  procedures: [],\n  categories: [],\n  selectedProcedures: [],\n  selectedMin: 0,\n  selectedMax: 0,\n  discount: 0,\n  discountedSelectedMin: 0,\n  discountedSelectedMax: 0\n};\n\nconst procedureReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROCEDURES:\n      return {\n        ...state,\n        procedures: action.payload.MasterPage.Procedures,\n        categories: action.payload.Categories\n      };\n    case SELECT_PROCEDURE:\n      //console.log(500 * state.selectedProcedures.length);\n      return {\n        ...state,\n        procedures: state.procedures.map(procedure =>\n          procedure.ProcedureId === action.payload.ProcedureId\n            ? { ...procedure, isSelected: true }\n            : procedure\n        ),\n        selectedProcedures: [...state.selectedProcedures, action.payload.Label],\n        discount: 500 * state.selectedProcedures.length || 0,\n        selectedMin: state.selectedMin + action.payload.MinimumPrice,\n        selectedMax: state.selectedMax + action.payload.MaximumPrice,\n      };\n    case DESELECT_PROCEDURE:\n      return {\n        ...state,\n        procedures: state.procedures.map(procedure =>\n          procedure.ProcedureId === action.payload.ProcedureId\n            ? { ...procedure, isSelected: false }\n            : procedure\n        ),\n        selectedProcedures: state.selectedProcedures.filter(procedure => procedure !== action.payload.Label),\n        discount: state.discount - 500,\n        selectedMin: state.selectedMin - action.payload.MinimumPrice,\n        selectedMax: state.selectedMax - action.payload.MaximumPrice,\n        discountedSelectedMin: state.selectedMin + state.discount - action.payload.MinimumPrice,\n        discountedSelectedMax: state.selectedMax + state.discount - action.payload.MaximumPrice\n      };\n    case CLEAR_PROCEDURES:\n      return {\n        ...state,\n        procedures: state.procedures.map(procedure =>\n          procedure.isSelected ? { ...procedure, isSelected: false } : procedure\n        ),\n        selectedProcedures: [],\n        discount: 0,\n        selectedMin: 0,\n        selectedMax: 0\n      };\n    case APPLY_DISCOUNT:\n      return {\n        ...state,\n        discountedSelectedMin: state.selectedMin - state.discount,\n        discountedSelectedMax: state.selectedMax - state.discount\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default procedureReducer;\n","import { combineReducers } from \"redux\";\nimport procedureReducer from \"./procedureReducer\";\n\nexport default combineReducers({\n  procedureReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}